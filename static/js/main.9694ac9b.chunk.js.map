{"version":3,"sources":["example/cardSlide/user.svg","component/cardSlide/CardContext.js","component/cardSlide/CardWrapper.js","component/cardSlide/CardSlide.js","component/cardSlide/index.js","example/cardSlide/TestCard.js","example/cardSlide/index.js","component/modal/SimpleModal.js","component/dialog/index.js","example/dialog/index.js","router/router.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","React","createContext","CardWapper","props","arguments","length","undefined","leftButtons","_useState","useState","_useState2","Object","slicedToArray","distance","setDistance","_useState3","_useState4","inTouch","setInTouch","_useState5","_useState6","touchPos","setTouchPos","scrollRef","useRef","leftRef","rightRef","ctx","useContext","context","getLeft","current","clientWidth","useEffect","subscribeBackAll","back","style","display","unsubscribeBackAll","useCallback","classList","add","touchStart","e","targetTouches","pageX","touchEnd","rightBord","left","backAll","transitionEnd","remove","setWapperDistance","moveDis","dis","touchMove","stopPropagation","react_default","a","createElement","className","ref","transform","concat","onTouchStart","onTouchMove","onTouchEnd","onTransitionEnd","map","item","index","onClick","cardIndex","key","label","rightButtons","CardSlide","backArr","Set","func","delete","toConsumableArray","forEach","v","window","removeEventListener","immediately","addEventListener","renderList","CardContext","Provider","value","Item","CardWrapper","defaultProps","TestCard","src","image","alt","console","log","background","width","CardSlidePage","cardSlide_TestCard","component_cardSlide","this","Component","SimpleModal","el","document","root","getElementById","appendChild","removeChild","ReactDom","createPortal","children","useDialog","isShow","setIsShow","hide","DialogModal","_ref","onHide","modal_SimpleModal","fontSize","textAlign","lineHeight","borderTop","show","DialogPage","_useDialog","Root","react_router_dom","react_router","path","component","cardScroll","exact","dialog","Boolean","location","hostname","match","ReactDOM","render","router","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9694ac9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.099779cd.svg\";","import React from 'react'\r\nexport default React.createContext('card')","import React, { useRef, useEffect, useState, useContext, useCallback } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport context from './CardContext'\r\n\r\nfunction CardWapper(props = { leftButtons: [] }) {\r\n  const [distance, setDistance] = useState(0)\r\n  const [inTouch, setInTouch] = useState(false)\r\n  const [touchPos, setTouchPos] = useState(0)\r\n  const scrollRef = useRef(null)\r\n  const leftRef = useRef(null)\r\n  const rightRef = useRef(null)\r\n  const ctx = useContext(context)\r\n  const getLeft = () => leftRef.current.clientWidth * -1\r\n\r\n  useEffect(() => {\r\n    props.subscribeBackAll(back)\r\n    leftRef.current.style.display = ''\r\n    setDistance(getLeft())\r\n    return () => props.unsubscribeBackAll(back)\r\n  }, [])\r\n\r\n  const back = useCallback(() => {\r\n    if (distance === getLeft()) {\r\n      return\r\n    }\r\n    scrollRef.current.classList.add('back-transition')\r\n    setDistance(getLeft())\r\n  }, [distance])\r\n\r\n  const touchStart = useCallback(e => {\r\n    setTouchPos(e.targetTouches[0].pageX)\r\n    setInTouch(true)\r\n  }, [distance])\r\n\r\n  const touchEnd = useCallback(() => {\r\n    setInTouch(false)\r\n    const rightBord = getLeft() - rightRef.current.clientWidth // transform 可位移的最大距离\r\n    // 左边自动归位    \r\n    const left = getLeft()\r\n    if (distance === left) {\r\n      return\r\n    }\r\n    if (distance > left * 0.5) {\r\n      // console.log('归位')\r\n      setDistance(0)\r\n    } else if (distance < left - 0.5 * rightRef.current.clientWidth) {\r\n      setDistance(rightBord)\r\n    } else {\r\n      setDistance(left)\r\n    }\r\n    // 注册一个回位事件\r\n    props.backAll()\r\n  })\r\n\r\n\r\n  const transitionEnd = useCallback(() => {\r\n    scrollRef.current.classList.remove('back-transition')\r\n  }, [])\r\n\r\n  const setWapperDistance = useCallback((moveDis) => {\r\n    const rightBord = getLeft() - rightRef.current.clientWidth // transform 可位移的最大距离\r\n    const dis = distance - touchPos + moveDis\r\n    if (dis >= 0) {\r\n      setDistance(0)\r\n    } else if (dis <= rightBord) {\r\n      setDistance(rightBord)\r\n    } else {\r\n      setDistance(dis)\r\n    }\r\n    setTouchPos(moveDis)\r\n  }, [distance, touchPos])\r\n\r\n  const touchMove = useCallback((e) => {\r\n    e.stopPropagation()\r\n    if (inTouch) {\r\n      setWapperDistance(e.targetTouches[0].pageX)\r\n    }\r\n  })\r\n\r\n  return <div className=\"card-wapper\" ref={scrollRef} style={{ transform: `translateX(${distance}px)` }} onTouchStart={touchStart} onTouchMove={touchMove} onTouchEnd={touchEnd} onTransitionEnd={transitionEnd}>\r\n    <div className=\"card-button-list\" style={{ display: 'none' }} ref={leftRef}>\r\n      {\r\n        ctx.leftButtons.map((item, index) =>\r\n          <button style={item.style}\r\n            onClick={e => item.onClick && item.onClick(item, props.cardIndex, e)}\r\n            key={index}\r\n          >\r\n            {item.label}\r\n          </button>)\r\n      }\r\n    </div>\r\n    {props.item}\r\n    <div className=\"card-button-list\" ref={rightRef}>\r\n      {\r\n        ctx.rightButtons.map((item, index) =>\r\n          <button style={item.style}\r\n            onClick={e => item.onClick && item.onClick(item, props.cardIndex, e)}\r\n            key={index}\r\n          >\r\n            {item.label}\r\n          </button>)\r\n      }\r\n    </div>\r\n  </div>\r\n}\r\nCardWapper.propTypes = {\r\n  backAll: PropTypes.func,\r\n  subscribeBackAll: PropTypes.func,\r\n  unsubscribeBackAll: PropTypes.func,\r\n  cardIndex: PropTypes.any,\r\n  item: PropTypes.element,\r\n}\r\nexport default CardWapper","import React from 'react'\r\nimport CardWapper from './CardWrapper'\r\nimport Context from './CardContext'\r\nimport PropTypes from 'prop-types'\r\nimport './index.scss'\r\nfunction CardSlide(props) {\r\n  // 让所有元素归位\r\n  const backArr = new Set()\r\n  function subscribeBackAll(func) {\r\n    backArr.add(func)\r\n  }\r\n  function unsubscribeBackAll(func) {\r\n    backArr.delete(func)\r\n  }\r\n\r\n  function back() {\r\n    [...backArr].forEach(v => {\r\n      v()\r\n    })\r\n    window.removeEventListener('touchstart', back)\r\n  }\r\n\r\n  function backAll(immediately) {\r\n    if (immediately) {\r\n      back()\r\n    }\r\n    window.addEventListener('touchstart', back)\r\n  }\r\n  const { leftButtons, rightButtons, renderList } = props\r\n\r\n  return <div className=\"card-slide-warpper\">\r\n    <Context.Provider value={{ leftButtons, rightButtons }}>\r\n      {renderList.map((Item, index) => <CardWapper item={Item} key={index} cardIndex={index} subscribeBackAll={subscribeBackAll} unsubscribeBackAll={unsubscribeBackAll} backAll={backAll}></CardWapper>)}\r\n    </Context.Provider>\r\n\r\n  </div >\r\n}\r\n\r\nCardSlide.defaultProps = {\r\n  leftButtons: [],\r\n  rightButtons: [],\r\n  renderList: []\r\n}\r\n\r\nCardSlide.propTypes = {\r\n  leftButtons: PropTypes.array,\r\n  rightButtons: PropTypes.array,\r\n  renderList: PropTypes.array,\r\n}\r\nexport default CardSlide","import CardWrapper from './CardWrapper'\r\nimport CardSlide from './CardSlide'\r\n\r\nexport default CardSlide\r\n\r\nexport {\r\n  CardSlide, CardWrapper\r\n}","import React from 'react';\r\nimport './index.scss';\r\nimport image from './user.svg';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction TestCard(props) {\r\n  return <div className=\"card-slide\">\r\n    <img src={image} alt=\"\" />\r\n    <div className=\"card-right\">\r\n      <p className=\"item\">\r\n        <span>服务号</span>\r\n        <span>下午22:30</span>\r\n      </p>\r\n      <p>QQ运动</p>\r\n    </div>\r\n  </div>\r\n}\r\nTestCard.propTypes = {\r\n  isClick: PropTypes.bool\r\n}\r\n\r\n\r\nexport default TestCard;\r\n","import React, { Component } from 'react';\r\n\r\nimport CardSlide from '../../component/cardSlide';\r\nimport TestCard from './TestCard'\r\n\r\nconst leftButtons = [\r\n  { label: '标记为未读', onClick: (item, index, e) => { console.log(item, index, e) } }\r\n]\r\nconst rightButtons = [\r\n  { label: '删除一些不必要的标签', style: { background: 'red', width: '100px' } },\r\n  { label: '更多', style: { background: 'yellowgreen' } },\r\n]\r\n\r\nclass CardSlidePage extends Component {\r\n  renderList = () => {\r\n    return [1, 2, 3, 4, 5, 6].map((v, index) => {\r\n      return <TestCard key={index} />;\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CardSlide renderList={this.renderList()} leftButtons={leftButtons} rightButtons={rightButtons}></CardSlide>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardSlidePage;\r\n","import { useEffect } from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport './index.scss'\r\nfunction SimpleModal(props) {\r\n  const el = document.createElement('div')\r\n  el.className = 'modal'\r\n  useEffect(() => {\r\n    const root = document.getElementById('root')\r\n    root.appendChild(el)\r\n    return () => root.removeChild(el)\r\n  })\r\n  return ReactDom.createPortal(props.children, el)\r\n}\r\n\r\nexport default SimpleModal","import React, { useState } from 'react'\r\nimport Modal from '../modal/SimpleModal'\r\n\r\nfunction useDialog() {\r\n  const [isShow, setIsShow] = useState(true)\r\n  function hide() {\r\n    setIsShow(false)\r\n  }\r\n  function show() {\r\n    setIsShow(true)\r\n  }\r\n\r\n  function DialogModal({ onHide }) {\r\n    return isShow && <Modal>\r\n      <div className=\"dialog\" style={{ fontSize: '20px', width: '80%', background: '#fff', textAlign: 'center' }}>\r\n        <p>Yes, this is a dialog</p>\r\n        <button style={{ fontSize: '20px', lineHeight: '1.5em', width: '100%', borderTop: '1px solid #ececec', background: '#fff' }} onClick={()=>{hide();onHide&&onHide();}}>Cancel</button>\r\n      </div>\r\n    </Modal>\r\n  }\r\n\r\n  return {\r\n    DialogModal,\r\n    hide,\r\n    show\r\n  }\r\n}\r\n\r\nexport default useDialog","import React from 'react'\r\nimport useDialog from '../../component/dialog'\r\nimport './index.scss'\r\nfunction DialogPage() {\r\n  const { DialogModal, show } = useDialog()\r\n\r\n  return <div className=\"dialog-page\">\r\n    <button onClick={show}>Show Dialog</button>\r\n    <DialogModal onHide={()=>{\r\n      console.log('hide')\r\n    }}></DialogModal>\r\n  </div>\r\n}\r\nexport default DialogPage","import React from 'react';\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\r\n// import asyncComponent from '../asyncComponent';\r\nimport cardScroll from '../example/cardSlide/index';\r\nimport dialog from '../example/dialog/index';\r\n\r\nconst Root = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/\" component={cardScroll} exact />\r\n      <Route path=\"/cardSlide\" component={cardScroll} />\r\n      <Route path=\"/dialog\" component={dialog} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Root;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './router/router';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}